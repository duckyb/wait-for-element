{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { defer, Observable, of, timer } from 'rxjs';\nimport { switchMap, first } from 'rxjs/operators';\n\n\n/**\n * An observable that starts polling for the element.\n * As soon as the element is available it is returned.\n */\nfunction waitForElement$({\n  root = document,\n  ticks = 10,\n  refreshInterval = 100,\n  query,\n}: {\n  /** The root element to search in. */\n  root?: Document;\n  /** The number of ticks to wait before giving up. */\n  ticks?: number;\n  /** The interval between ticks. */\n  refreshInterval?: number;\n  /** The query to search for. */\n  query: string;\n}): Observable<Element | null> {\n  const el$ = defer(() => of(root.querySelector(query)));\n  return timer(0, refreshInterval).pipe(\n    switchMap((tick) => {\n      if (tick > ticks) {\n        throw Error(`Waiting for ${query} resulted in a timeout!`);\n      } return el$;\n    }),\n    first()\n  );\n}\n\nexport default waitForElement$;\n"],"mappings":";AAAA,SAAS,OAAmB,IAAI,aAAa;AAC7C,SAAS,WAAW,aAAa;AAOjC,SAAS,gBAAgB;AAAA,EACvB,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,kBAAkB;AAAA,EAClB;AACF,GAS+B;AAC7B,QAAM,MAAM,MAAM,MAAM,GAAG,KAAK,cAAc,KAAK,CAAC,CAAC;AACrD,SAAO,MAAM,GAAG,eAAe,EAAE;AAAA,IAC/B,UAAU,CAAC,SAAS;AAClB,UAAI,OAAO,OAAO;AAChB,cAAM,MAAM,eAAe,KAAK,yBAAyB;AAAA,MAC3D;AAAE,aAAO;AAAA,IACX,CAAC;AAAA,IACD,MAAM;AAAA,EACR;AACF;AAEA,IAAO,cAAQ;","names":[]}